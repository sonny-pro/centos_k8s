#! /bin/bash

# Worker Nodes
sudo firewall-cmd --permanent --zone=public --add-port=10250/tcp # Kubelet API
sudo firewall-cmd --permanent --zone=public --add-port=30000-32767/tcp # NodePort Services**	
sudo firewall-cmd --reload

# Enable the br_netfilter module for cluster communication
sudo modprobe br_netfilter
sudo echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
sudo echo '1' > /proc/sys/net/bridge/bridge-nf-call-ip6tables

sudo update-alternatives --set iptables /usr/sbin/iptables-legacy

# Add Kubernetes repo
sudo cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

sudo yum makecache

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

# Configure cgroup driver used by kubelet on control-plane node
sudo sed -i '/^KUBELET_EXTRA_ARGS=/ s/$/--cgroup-driver=systemd/' /etc/sysconfig/kubelet

# Ensure iptables aren't being bypassed
sudo cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

sudo systemctl enable --now kubelet